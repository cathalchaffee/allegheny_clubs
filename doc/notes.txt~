CONTROLLER FORMAT
class ClubsController < ApplicationController
  
  # GET /clubs LIST OF ALL CLUBS 
  def index
    @clubs = Club.all
  end

  #ACTIONS  
  def show
  end

  # GET /clubs/new
  def new
    @club = Club.new
  end
  
  # POST /clubs
  def create
    @club = Club.new(club_params)

    if @club.save
      redirect_to @club, notice: 'Club was successfully created.'
    else
      render :new
    end
  end

  # PATCH/PUT /clubs/1
  def update
    if @club.update(club_params)
      redirect_to @club, notice: 'Club was successfully updated.'
    else
      render :edit
    end
  end

  # DELETE /clubs/1
  def destroy
    @club.destroy
    redirect_to clubs_url, notice: 'Club was successfully destroyed.'
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_club
      @club = Club.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def club_params
      params.require(:club).permit(:name, :description)
    end
end

*******************END OF CONTROLLER EXAMPLE*************************


VIEWS CREATED
edit.html.erb
_form.html.erb
index.html.erb
new.html.erb
show.html.erb


***********************RUN MIGRATION***********************************
CREATE MIGRATION MODEL
bin/rails generate model Article title:string text:text
RUN MIGRATION
bin/rake db:migrate

IN CONTROLLER create FUNCTION
Rails has STRONG PARAMETERS
specify what is allowed and what is permited:

def create
  @article = Article.new(article_params)
 
  @article.save
  redirect_to @article
end
 
private
  def article_params
    params.require(:article).permit(:title, :text)
  end


************************SHOW FUNCTION************************************

def show
    @article = Article.find(params[:id])
  end

create a show.html.erb function
EXAMPLE CONTENT 
<p>
  <strong>Title:</strong>
  <%= @article.title %>
</p>
 
<p>
  <strong>Text:</strong>
  <%= @article.text %>
</p>


************************MODEL VALIDATION***********************************

app/models/model_name.rb
  class Article < ActiveRecord::Base
    validates :title, presence: true,
                      length: { minimum: 5 }
  end


